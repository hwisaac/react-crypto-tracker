{"version":3,"sources":["api.ts","routes/Chart.tsx","routes/Price.tsx","routes/Coin.tsx","routes/Coins.tsx","Router.tsx","App.tsx","index.tsx","theme.ts"],"names":["BASE_URL","fetchCoins","fetch","then","response","json","Chart","coinId","useQuery","fetchCoinHistory","isLoading","data","type","series","name","map","price","close","options","theme","mode","chart","height","width","toolbar","show","background","grid","stroke","curve","yaxis","xaxis","axisBorder","axisTicks","labels","categories","time_close","fill","gradient","gradientToColors","stops","colors","tooltip","y","formatter","value","toFixed","Price","Title","styled","h1","props","accentColor","Loader","span","Container","div","Header","header","Overview","OverviewItem","Description","p","Tabs","Tab","isActive","textColor","Coin","useParams","state","useLocation","priceMatch","useRouteMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","fetchCoinTickers","tickersLoading","tickersData","loading","rank","symbol","open_source","description","total_supply","max_supply","to","path","CoinsList","ul","li","bgColor","Img","img","Coins","slice","coin","pathname","id","src","toLowerCase","Router","GlobalStyle","createGlobalStyle","App","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.4fb74c14.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1`;\n\nexport function fetchCoins() {\n  return fetch(`${BASE_URL}/coins`).then((response) => response.json());\n}\n\nexport function fetchCoinInfo(coinId: string) {\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((response) =>\n    response.json()\n  );\n}\n\nexport function fetchCoinTickers(coinId: string) {\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) =>\n    response.json()\n  );\n}\n\nexport function fetchCoinHistory(coinId: string) {\n  return fetch(\n    `https://ohlcv-api.nomadcoders.workers.dev?coinId=${coinId}`\n  ).then((response) => response.json());\n}\n","import { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\n\ninterface IHistorical {\n  time_open: string;\n  time_close: string;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  market_cap: number;\n}\ninterface ChartProps {\n  coinId: string;\n}\nfunction Chart({ coinId }: ChartProps) {\n  const { isLoading, data } = useQuery<IHistorical[]>([\"ohlcv\", coinId], () =>\n    fetchCoinHistory(coinId)\n  );\n  return (\n    <div>\n      {isLoading ? (\n        \"Loading chart...\"\n      ) : (\n        <ApexChart\n          type='line'\n          series={[\n            {\n              name: \"Price\",\n              data: data?.map((price) => price.close) as number[],\n            },\n          ]}\n          options={{\n            theme: {\n              mode: \"dark\",\n            },\n            chart: {\n              height: 300,\n              width: 500,\n              toolbar: {\n                show: false,\n              },\n              background: \"transparent\",\n            },\n            grid: { show: false },\n            stroke: {\n              curve: \"smooth\",\n              width: 4,\n            },\n            yaxis: {\n              show: false,\n            },\n            xaxis: {\n              axisBorder: { show: false },\n              axisTicks: { show: false },\n              labels: { show: false },\n              type: \"datetime\",\n              categories: data?.map((price) => price.time_close),\n            },\n            fill: {\n              type: \"gradient\",\n              gradient: { gradientToColors: [\"#0be881\"], stops: [0, 100] },\n            },\n            colors: [\"#0fbcf9\"],\n            tooltip: {\n              y: {\n                formatter: (value) => `$${value.toFixed(2)}`,\n              },\n            },\n          }}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Chart;\n","function Price() {\n  return <h1>Price</h1>;\n}\n\nexport default Price;\n","import { useQuery } from \"react-query\";\nimport {\n  Switch,\n  Route,\n  useLocation,\n  useParams,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api\";\nimport Chart from \"./Chart\";\nimport Price from \"./Price\";\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 15vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Overview = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 10px 20px;\n  border-radius: 10px;\n`;\nconst OverviewItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 33%;\n  span:first-child {\n    font-size: 10px;\n    font-weight: 400;\n    text-transform: uppercase;\n    margin-bottom: 5px;\n  }\n`;\nconst Description = styled.p`\n  margin: 20px 0px;\n`;\n\nconst Tabs = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  margin: 25px 0px;\n  gap: 10px;\n`;\n\nconst Tab = styled.span<{ isActive: boolean }>`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 400;\n  background-color: rgba(0, 0, 0, 0.5);\n  border-radius: 10px;\n  color: ${(props) =>\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\n  a {\n    padding: 7px 0px;\n    display: block;\n  }\n`;\ninterface RouteParams {\n  coinId: string;\n}\ninterface RouteState {\n  name: string;\n}\n\ninterface InfoData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n  description: string;\n  message: string;\n  open_source: boolean;\n  started_at: string;\n  development_status: string;\n  hardware_wallet: boolean;\n  proof_type: string;\n  org_structure: string;\n  hash_algorithm: string;\n  first_data_at: string;\n  last_data_at: string;\n}\n\ninterface PriceData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\nfunction Coin() {\n  const { coinId } = useParams<RouteParams>();\n  const { state } = useLocation<RouteState>();\n  const priceMatch = useRouteMatch(\"/:coinId/price\");\n  const chartMatch = useRouteMatch(\"/:coinId/chart\");\n  const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>(\n    [\"info\", coinId],\n    () => fetchCoinInfo(coinId)\n  );\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>(\n    [\"tickers\", coinId],\n    () => fetchCoinTickers(coinId)\n  );\n  const loading = infoLoading || tickersLoading;\n  return (\n    <Container>\n      <Header>\n        <Title>\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n        </Title>\n      </Header>\n      {loading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Overview>\n            <OverviewItem>\n              <span>Rank:</span>\n              <span>{infoData?.rank}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Symbol:</span>\n              <span>${infoData?.symbol}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Open Source:</span>\n              <span>{infoData?.open_source ? \"Yes\" : \"No\"}</span>\n            </OverviewItem>\n          </Overview>\n          <Description>{infoData?.description}</Description>\n          <Overview>\n            <OverviewItem>\n              <span>Total Suply:</span>\n              <span>{tickersData?.total_supply}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Max Supply:</span>\n              <span>{tickersData?.max_supply}</span>\n            </OverviewItem>\n          </Overview>\n          <Tabs>\n            <Tab isActive={chartMatch !== null}>\n              <Link to={`/${coinId}/chart`}>Chart</Link>\n            </Tab>\n            <Tab isActive={priceMatch !== null}>\n              <Link to={`/${coinId}/price`}>Price</Link>\n            </Tab>\n          </Tabs>\n          <Switch>\n            <Route path={`/:coinId/price`}>\n              <Price />\n            </Route>\n            <Route path={`/:coinId/chart`}>\n              <Chart coinId={coinId} />\n            </Route>\n          </Switch>\n        </>\n      )}\n    </Container>\n  );\n}\nexport default Coin;\n","import { useQuery } from \"react-query\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fetchCoins } from \"../api\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 15vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst CoinsList = styled.ul``;\n\nconst Coin = styled.li`\n  background-color: white;\n  color: ${(props) => props.theme.bgColor};\n  border-radius: 15px;\n  margin-bottom: 10px;\n  a {\n    display: flex;\n    align-items: center;\n    padding: 20px;\n    transition: color 0.2s ease-in;\n  }\n  &:hover {\n    a {\n      color: ${(props) => props.theme.accentColor};\n    }\n  }\n`;\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Img = styled.img`\n  width: 35px;\n  height: 35px;\n  margin-right: 10px;\n`;\n\ninterface ICoin {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n}\n\nfunction Coins() {\n  const { isLoading, data } = useQuery<ICoin[]>(\"allCoins\", fetchCoins);\n  return (\n    <Container>\n      <Header>\n        <Title>코인</Title>\n      </Header>\n      {isLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <CoinsList>\n          {data?.slice(0, 100).map((coin) => (\n            <Coin key={coin.id}>\n              <Link\n                to={{\n                  pathname: `/${coin.id}`,\n                  state: { name: coin.name },\n                }}>\n                <Img\n                  src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\n                />\n                {coin.name} &rarr;\n              </Link>\n            </Coin>\n          ))}\n        </CoinsList>\n      )}\n    </Container>\n  );\n}\nexport default Coins;\n","import { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Coin from \"./routes/Coin\";\nimport Coins from \"./routes/Coins\";\n\nfunction Router() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path='/:coinId'>\n          <Coin />\n        </Route>\n        <Route path='/'>\n          <Coins />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\nexport default Router;\n","import { createGlobalStyle } from \"styled-components\";\nimport Router from \"./Router\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\n\nconst GlobalStyle = createGlobalStyle`\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n*{\n  box-sizing: border-box;\n}\nbody{\n\tfont-weight: 300;\n  background-color: ${(props) => props.theme.bgColor};\n\tcolor:${(props) => props.theme.textColor};\n  line-height: 1.2;\n}\na{\n  text-decoration: none;\n  color:inherit;\n}\n`;\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <Router />;\n      <ReactQueryDevtools initialIsOpen={true} />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./App\";\nimport { theme } from \"./theme\";\n\nconst queryClient = new QueryClient();\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { DefaultTheme } from \"styled-components\";\n\nexport const theme: DefaultTheme = {\n  bgColor: \"#2f3640\",\n  textColor: \"#f5f6fa\",\n  accentColor: \"#9c88ff\",\n};\n"],"sourceRoot":""}